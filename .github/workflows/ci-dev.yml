name: CI to AKS (dev)

on:
  push:
    branches: [ "main" ]
    paths:
      - "app/**"
      - ".github/workflows/ci-dev.yml"

permissions:
  id-token: write
  contents: read

env:
  NAMESPACE: dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build & Push image + Deploy to AKS
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -e
            ACR_LOGIN=$(az acr show -n ${{ secrets.ACR_NAME }} --query loginServer -o tsv)
            az acr build -r ${{ secrets.ACR_NAME }} \
              -t "$ACR_LOGIN/hello-db:latest" \
              -t "$ACR_LOGIN/hello-db:${{ github.sha }}" ./app
            az aks get-credentials -g ${{ secrets.AKS_RG }} -n ${{ secrets.AKS_NAME }} --admin --overwrite-existing
            kubectl create ns $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
            kubectl -n $NAMESPACE set image deploy/hello-db web="$ACR_LOGIN/hello-db:${{ github.sha }}"
            kubectl -n $NAMESPACE rollout status deploy/hello-db
